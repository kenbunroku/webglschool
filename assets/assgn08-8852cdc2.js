import"./modulepreload-polyfill-3cfb730f.js";class F{static loadFile(t){return new Promise((e,s)=>{fetch(t).then(i=>i.text()).then(i=>{e(i)}).catch(i=>{s(i)})})}static loadImage(t){return new Promise(e=>{const s=new Image;s.addEventListener("load",()=>{e(s)},!1),s.addEventListener("error",i=>{reject(new Error(`Failed to load image at path: ${t}`))},!1),s.src=t})}static loadImages(t){return Promise.all(t.map(e=>F.loadImage(e)))}static createWebGLContext(t){const e=t.getContext("webgl");if(e==null)throw new Error("webgl not supported");return e}static createShaderObject(t,e,s){const i=t.createShader(s);if(t.shaderSource(i,e),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS))return i;throw new Error(t.getShaderInfoLog(i))}static createProgramObject(t,e,s){const i=t.createProgram();if(t.attachShader(i,e),t.attachShader(i,s),t.linkProgram(i),t.deleteShader(e),t.deleteShader(s),t.getProgramParameter(i,t.LINK_STATUS))return t.useProgram(i),i;throw new Error(t.getProgramInfoLog(i))}static createVBO(t,e){const s=t.createBuffer();return t.bindBuffer(t.ARRAY_BUFFER,s),t.bufferData(t.ARRAY_BUFFER,new Float32Array(e),t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,null),s}static createIBO(t,e){const s=t.createBuffer();return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Int16Array(e),t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null),s}static enableBuffer(t,e,s,i,n){for(let r=0;r<e.length;++r)t.bindBuffer(t.ARRAY_BUFFER,e[r]),t.enableVertexAttribArray(s[r]),t.vertexAttribPointer(s[r],i[r],t.FLOAT,!1,0,0);n!=null&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)}static createTexture(t,e){const s=t.createTexture();return t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,e),t.generateMipmap(t.TEXTURE_2D),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.MIRRORED_REPEAT),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.MIRRORED_REPEAT),t.bindTexture(t.TEXTURE_2D,null),s}static createTextures(t,e){const s=[];for(let i=0;i<e.length;++i)s.push(this.createTexture(t,e[i]));return s}static createFramebuffer(t,e,s){const i=t.createFramebuffer(),n=t.createRenderbuffer(),r=t.createTexture();return t.bindFramebuffer(t.FRAMEBUFFER,i),t.bindRenderbuffer(t.RENDERBUFFER,n),t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e,s),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,n),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,e,s,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0),t.bindTexture(t.TEXTURE_2D,null),t.bindRenderbuffer(t.RENDERBUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null),{framebuffer:i,depthRenderbuffer:n,texture:r}}static deleteFramebuffer(t,e,s,i){t.deleteFramebuffer(e),t.deleteRenderbuffer(s),t.deleteTexture(i),e=null,s=null,i=null}}class g{static get Vec2(){return $}static get Vec3(){return Q}static get Mat4(){return Z}static get Qtn(){return K}}let $=class W{static create(t=0,e=0){const s=new Float32Array(2);return s[0]=t,s[1]=e,s}static length(t){return Math.sqrt(t[0]*t[0]+t[1]*t[1])}static normalize(t){const e=W.create(),s=W.length(t);if(s>0){const i=1/s;e[0]=t[0]*i,e[1]=t[1]*i}return e}static dot(t,e){return t[0]*e[0]+t[1]*e[1]}static cross(t,e){return W.create(),t[0]*e[1]-t[1]*e[0]}},Q=class X{static create(t=0,e=0,s=0){const i=new Float32Array(3);return i[0]=t,i[1]=e,i[2]=s,i}static length(t){return Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2])}static subtract(t,e){const s=X.create();return s[0]=t[0]-e[0],s[1]=t[1]-e[1],s[2]=t[2]-e[2],s}static normalize(t){const e=X.create(),s=X.length(t);if(s>0){const i=1/s;e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i}return e}static dot(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}static cross(t,e){return X.create(t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0])}static faceNormal(t,e,s){const i=X.create(e[0]-t[0],e[1]-t[1],e[2]-t[2]),n=X.create(s[0]-t[0],s[1]-t[1],s[2]-t[2]),r=X.create(i[1]*n[2]-i[2]*n[1],i[2]*n[0]-i[0]*n[2],i[0]*n[1]-i[1]*n[0]);return X.normalize(r)}},Z=class _{static create(){return new Float32Array(16)}static identity(t){const e=t??_.create();return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}static multiply(t,e,s){const i=s??_.create(),n=t[0],r=t[1],o=t[2],a=t[3],h=t[4],c=t[5],f=t[6],u=t[7],E=t[8],p=t[9],d=t[10],l=t[11],x=t[12],P=t[13],R=t[14],I=t[15],A=e[0],b=e[1],T=e[2],M=e[3],D=e[4],y=e[5],m=e[6],w=e[7],B=e[8],L=e[9],S=e[10],U=e[11],N=e[12],V=e[13],Y=e[14],H=e[15];return i[0]=A*n+b*h+T*E+M*x,i[1]=A*r+b*c+T*p+M*P,i[2]=A*o+b*f+T*d+M*R,i[3]=A*a+b*u+T*l+M*I,i[4]=D*n+y*h+m*E+w*x,i[5]=D*r+y*c+m*p+w*P,i[6]=D*o+y*f+m*d+w*R,i[7]=D*a+y*u+m*l+w*I,i[8]=B*n+L*h+S*E+U*x,i[9]=B*r+L*c+S*p+U*P,i[10]=B*o+L*f+S*d+U*R,i[11]=B*a+L*u+S*l+U*I,i[12]=N*n+V*h+Y*E+H*x,i[13]=N*r+V*c+Y*p+H*P,i[14]=N*o+V*f+Y*d+H*R,i[15]=N*a+V*u+Y*l+H*I,i}static scale(t,e,s){const i=s??_.create();return i[0]=t[0]*e[0],i[1]=t[1]*e[0],i[2]=t[2]*e[0],i[3]=t[3]*e[0],i[4]=t[4]*e[1],i[5]=t[5]*e[1],i[6]=t[6]*e[1],i[7]=t[7]*e[1],i[8]=t[8]*e[2],i[9]=t[9]*e[2],i[10]=t[10]*e[2],i[11]=t[11]*e[2],i[12]=t[12],i[13]=t[13],i[14]=t[14],i[15]=t[15],i}static translate(t,e,s){const i=s??_.create();return i[0]=t[0],i[1]=t[1],i[2]=t[2],i[3]=t[3],i[4]=t[4],i[5]=t[5],i[6]=t[6],i[7]=t[7],i[8]=t[8],i[9]=t[9],i[10]=t[10],i[11]=t[11],i[12]=t[0]*e[0]+t[4]*e[1]+t[8]*e[2]+t[12],i[13]=t[1]*e[0]+t[5]*e[1]+t[9]*e[2]+t[13],i[14]=t[2]*e[0]+t[6]*e[1]+t[10]*e[2]+t[14],i[15]=t[3]*e[0]+t[7]*e[1]+t[11]*e[2]+t[15],i}static rotate(t,e,s,i){let n=i??_.create();const r=Math.sqrt(s[0]*s[0]+s[1]*s[1]+s[2]*s[2]);if(!r)return null;let o=s[0],a=s[1],h=s[2];if(r!=1){const V=1/r;o*=V,a*=V,h*=V}const c=Math.sin(e),f=Math.cos(e),u=1-f,E=t[0],p=t[1],d=t[2],l=t[3],x=t[4],P=t[5],R=t[6],I=t[7],A=t[8],b=t[9],T=t[10],M=t[11],D=o*o*u+f,y=a*o*u+h*c,m=h*o*u-a*c,w=o*a*u-h*c,B=a*a*u+f,L=h*a*u+o*c,S=o*h*u+a*c,U=a*h*u-o*c,N=h*h*u+f;return e?t!=n&&(n[12]=t[12],n[13]=t[13],n[14]=t[14],n[15]=t[15]):n=t,n[0]=E*D+x*y+A*m,n[1]=p*D+P*y+b*m,n[2]=d*D+R*y+T*m,n[3]=l*D+I*y+M*m,n[4]=E*w+x*B+A*L,n[5]=p*w+P*B+b*L,n[6]=d*w+R*B+T*L,n[7]=l*w+I*B+M*L,n[8]=E*S+x*U+A*N,n[9]=p*S+P*U+b*N,n[10]=d*S+R*U+T*N,n[11]=l*S+I*U+M*N,n}static lookAt(t,e,s,i){const n=i??_.create(),r=t[0],o=t[1],a=t[2],h=e[0],c=e[1],f=e[2],u=s[0],E=s[1],p=s[2];if(r==h&&o==c&&a==f)return _.identity(n);let d,l,x,P,R,I,A,b,T,M;return A=r-h,b=o-c,T=a-f,M=1/Math.sqrt(A*A+b*b+T*T),A*=M,b*=M,T*=M,d=E*T-p*b,l=p*A-u*T,x=u*b-E*A,M=Math.sqrt(d*d+l*l+x*x),M?(M=1/M,d*=M,l*=M,x*=M):(d=0,l=0,x=0),P=b*x-T*l,R=T*d-A*x,I=A*l-b*d,M=Math.sqrt(P*P+R*R+I*I),M?(M=1/M,P*=M,R*=M,I*=M):(P=0,R=0,I=0),n[0]=d,n[1]=P,n[2]=A,n[3]=0,n[4]=l,n[5]=R,n[6]=b,n[7]=0,n[8]=x,n[9]=I,n[10]=T,n[11]=0,n[12]=-(d*r+l*o+x*a),n[13]=-(P*r+R*o+I*a),n[14]=-(A*r+b*o+T*a),n[15]=1,n}static perspective(t,e,s,i,n){const r=n??_.create(),o=s*Math.tan(t*Math.PI/360),h=o*e*2,c=o*2,f=i-s;return r[0]=s*2/h,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=s*2/c,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=-(i+s)/f,r[11]=-1,r[12]=0,r[13]=0,r[14]=-(i*s*2)/f,r[15]=0,r}static ortho(t,e,s,i,n,r,o){const a=o??_.create(),h=e-t,c=s-i,f=r-n;return a[0]=2/h,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=2/c,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=-2/f,a[11]=0,a[12]=-(t+e)/h,a[13]=-(s+i)/c,a[14]=-(r+n)/f,a[15]=1,a}static transpose(t,e){const s=e??_.create();return s[0]=t[0],s[1]=t[4],s[2]=t[8],s[3]=t[12],s[4]=t[1],s[5]=t[5],s[6]=t[9],s[7]=t[13],s[8]=t[2],s[9]=t[6],s[10]=t[10],s[11]=t[14],s[12]=t[3],s[13]=t[7],s[14]=t[11],s[15]=t[15],s}static inverse(t,e){const s=e??_.create(),i=t[0],n=t[1],r=t[2],o=t[3],a=t[4],h=t[5],c=t[6],f=t[7],u=t[8],E=t[9],p=t[10],d=t[11],l=t[12],x=t[13],P=t[14],R=t[15],I=i*h-n*a,A=i*c-r*a,b=i*f-o*a,T=n*c-r*h,M=n*f-o*h,D=r*f-o*c,y=u*x-E*l,m=u*P-p*l,w=u*R-d*l,B=E*P-p*x,L=E*R-d*x,S=p*R-d*P,U=1/(I*S-A*L+b*B+T*w-M*m+D*y);return s[0]=(h*S-c*L+f*B)*U,s[1]=(-n*S+r*L-o*B)*U,s[2]=(x*D-P*M+R*T)*U,s[3]=(-E*D+p*M-d*T)*U,s[4]=(-a*S+c*w-f*m)*U,s[5]=(i*S-r*w+o*m)*U,s[6]=(-l*D+P*b-R*A)*U,s[7]=(u*D-p*b+d*A)*U,s[8]=(a*L-h*w+f*y)*U,s[9]=(-i*L+n*w-o*y)*U,s[10]=(l*M-x*b+R*I)*U,s[11]=(-u*M+E*b-d*I)*U,s[12]=(-a*B+h*m-c*y)*U,s[13]=(i*B-n*m+r*y)*U,s[14]=(-l*T+x*A-P*I)*U,s[15]=(u*T-E*A+p*I)*U,s}static toVecIV(t,e){const s=t[0],i=t[1],n=t[2],r=t[3],o=t[4],a=t[5],h=t[6],c=t[7],f=t[8],u=t[9],E=t[10],p=t[11],d=t[12],l=t[13],x=t[14],P=t[15],R=e[0],I=e[1],A=e[2],b=e[3],T=new Float32Array(4);return T[0]=R*s+I*o+A*f+b*d,T[1]=R*i+I*a+A*u+b*l,T[2]=R*n+I*h+A*E+b*x,T[3]=R*r+I*c+A*p+b*P,T}static screenPositionFromMvp(t,e,s,i){const n=s*.5,r=i*.5,o=_.toVecIV(t,[e[0],e[1],e[2],1]);if(o[3]<=0)return[NaN,NaN];o[0]/=o[3],o[1]/=o[3],o[2]/=o[3];const a=$.create();return a[0]=n+o[0]*n,a[1]=r-o[1]*r,a}},K=class O{static create(){return new Float32Array(4)}static identity(t){const e=t??O.create();return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}static inverse(t,e){const s=e??O.create();return s[0]=-t[0],s[1]=-t[1],s[2]=-t[2],s[3]=t[3],s}static normalize(t){const e=O.create(),s=t[0],i=t[1],n=t[2],r=Math.sqrt(s*s+i*i+n*n);if(r>0){const o=1/r;e[0]=s*o,e[1]=i*o,e[2]=n*o}return e}static multiply(t,e,s){const i=s??O.create(),n=t[0],r=t[1],o=t[2],a=t[3],h=e[0],c=e[1],f=e[2],u=e[3];return i[0]=n*u+a*h+r*f-o*c,i[1]=r*u+a*c+o*h-n*f,i[2]=o*u+a*f+n*c-r*h,i[3]=a*u-n*h-r*c-o*f,i}static rotate(t,e,s){const i=s??O.create();let n=e[0],r=e[1],o=e[2];const a=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);if(a!==0){const c=1/a;n*=c,r*=c,o*=c}const h=Math.sin(t*.5);return i[0]=n*h,i[1]=r*h,i[2]=o*h,i[3]=Math.cos(t*.5),i}static toVecIII(t,e,s){const i=s??Q.create(),n=O.create(),r=O.create(),o=O.create();return O.inverse(e,o),n[0]=t[0],n[1]=t[1],n[2]=t[2],O.multiply(o,n,r),O.multiply(r,e,o),i[0]=o[0],i[1]=o[1],i[2]=o[2],i}static toMatIV(t,e){const s=e??Z.create(),i=t[0],n=t[1],r=t[2],o=t[3],a=i+i,h=n+n,c=r+r,f=i*a,u=i*h,E=i*c,p=n*h,d=n*c,l=r*c,x=o*a,P=o*h,R=o*c;return s[0]=1-(p+l),s[1]=u-R,s[2]=E+P,s[3]=0,s[4]=u+R,s[5]=1-(f+l),s[6]=d-x,s[7]=0,s[8]=E-P,s[9]=d+x,s[10]=1-(f+p),s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,s}static slerp(t,e,s,i){const n=i??O.create(),r=t[0]*e[0]+t[1]*e[1]+t[2]*e[2]+t[3]*e[3];let o=1-r*r;if(o<=0)n[0]=t[0],n[1]=t[1],n[2]=t[2],n[3]=t[3];else if(o=Math.sqrt(o),Math.abs(o)<1e-4)n[0]=t[0]*.5+e[0]*.5,n[1]=t[1]*.5+e[1]*.5,n[2]=t[2]*.5+e[2]*.5,n[3]=t[3]*.5+e[3]*.5;else{const a=Math.acos(r),h=a*s,c=Math.sin(a-h)/o,f=Math.sin(h)/o;n[0]=t[0]*c+e[0]*f,n[1]=t[1]*c+e[1]*f,n[2]=t[2]*c+e[2]*f,n[3]=t[3]*c+e[3]*f}return n}};class k{static plane(t,e,s){const i=t/2,n=e/2,r=[-i,n,0,i,n,0,-i,-n,0,i,-n,0],o=[0,0,1,0,0,1,0,0,1,0,0,1],a=[s[0],s[1],s[2],s[3],s[0],s[1],s[2],s[3],s[0],s[1],s[2],s[3],s[0],s[1],s[2],s[3]];return{position:r,normal:o,color:a,texCoord:[0,0,1,0,0,1,1,1],index:[0,2,1,1,2,3]}}static circle(t,e,s){const i=[],n=[],r=[],o=[],a=[];i.push(0,0,0),n.push(0,0,1),r.push(s[0],s[1],s[2],s[3]),o.push(.5,.5);let h=0;for(let c=0;c<t;c++){const f=Math.PI*2/t*c,u=Math.cos(f),E=Math.sin(f);i.push(u*e,E*e,0),n.push(0,0,1),r.push(s[0],s[1],s[2],s[3]),o.push((u+1)*.5,1-(E+1)*.5),c===t-1?a.push(0,h+1,1):a.push(0,h+1,h+2),++h}return{position:i,normal:n,color:r,texCoord:o,index:a}}static cube(t,e){const s=t*.5,i=[-s,-s,s,s,-s,s,s,s,s,-s,s,s,-s,-s,-s,-s,s,-s,s,s,-s,s,-s,-s,-s,s,-s,-s,s,s,s,s,s,s,s,-s,-s,-s,-s,s,-s,-s,s,-s,s,-s,-s,s,s,-s,-s,s,s,-s,s,s,s,s,-s,s,-s,-s,-s,-s,-s,s,-s,s,s,-s,s,-s],n=1/Math.sqrt(3),r=[-n,-n,n,n,-n,n,n,n,n,-n,n,n,-n,-n,-n,-n,n,-n,n,n,-n,n,-n,-n,-n,n,-n,-n,n,n,n,n,n,n,n,-n,-n,-n,-n,n,-n,-n,n,-n,n,-n,-n,n,n,-n,-n,n,n,-n,n,n,n,n,-n,n,-n,-n,-n,-n,-n,n,-n,n,n,-n,n,-n],o=[];for(let c=0;c<i.length/3;c++)o.push(e[0],e[1],e[2],e[3]);return{position:i,normal:r,color:o,texCoord:[0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1],index:[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]}}static cone(t,e,s,i){const n=[],r=[],o=[],a=[],h=[],c=s/2;n.push(0,-c,0),r.push(0,-1,0),o.push(i[0],i[1],i[2],i[3]),a.push(.5,.5);let f=0;for(let u=0;u<=t;u++){const E=Math.PI*2/t*u,p=Math.cos(E),d=Math.sin(E);n.push(p*e,-c,d*e,p*e,-c,d*e),r.push(0,-1,0,p,0,d),o.push(i[0],i[1],i[2],i[3],i[0],i[1],i[2],i[3]),a.push((p+1)*.5,1-(d+1)*.5,(p+1)*.5,1-(d+1)*.5),u!==t&&(h.push(0,f+1,f+3),h.push(f+4,f+2,t*2+3)),f+=2}return n.push(0,c,0),r.push(0,1,0),o.push(i[0],i[1],i[2],i[3]),a.push(.5,.5),{position:n,normal:r,color:o,texCoord:a,index:h}}static cylinder(t,e,s,i,n){const r=[],o=[],a=[],h=[],c=[],f=i/2;r.push(0,f,0,0,-f,0),o.push(0,1,0,0,-1,0),a.push(n[0],n[1],n[2],n[3],n[0],n[1],n[2],n[3]),h.push(.5,.5,.5,.5);let u=2;for(let E=0;E<=t;E++){const p=Math.PI*2/t*E,d=Math.cos(p),l=Math.sin(p);r.push(d*e,f,l*e,d*e,f,l*e,d*s,-f,l*s,d*s,-f,l*s),o.push(0,1,0,d,0,l,0,-1,0,d,0,l),a.push(n[0],n[1],n[2],n[3],n[0],n[1],n[2],n[3],n[0],n[1],n[2],n[3],n[0],n[1],n[2],n[3]),h.push((d+1)*.5,1-(l+1)*.5,1-E/t,0,(d+1)*.5,1-(l+1)*.5,1-E/t,1),E!==t&&c.push(0,u+4,u,1,u+2,u+6,u+5,u+7,u+1,u+1,u+7,u+3),u+=4}return{position:r,normal:o,color:a,texCoord:h,index:c}}static sphere(t,e,s,i){const n=[],r=[],o=[],a=[],h=[];for(let c=0;c<=t;c++){const f=Math.PI/t*c,u=Math.cos(f),E=Math.sin(f);for(let p=0;p<=e;p++){const d=Math.PI*2/e*p,l=E*s*Math.cos(d),x=u*s,P=E*s*Math.sin(d),R=E*Math.cos(d),I=E*Math.sin(d);n.push(l,x,P),r.push(R,u,I),o.push(i[0],i[1],i[2],i[3]),a.push(1-1/e*p,1/t*c)}}for(let c=0;c<t;c++)for(let f=0;f<e;f++){const u=(e+1)*c+f;h.push(u,u+1,u+e+2),h.push(u,u+e+2,u+e+1)}return{position:n,normal:r,color:o,texCoord:a,index:h}}static torus(t,e,s,i,n){const r=[],o=[],a=[],h=[],c=[];for(let f=0;f<=t;f++){const u=Math.PI*2/t*f,E=Math.cos(u),p=Math.sin(u);for(let d=0;d<=e;d++){const l=Math.PI*2/e*d,x=(E*s+i)*Math.cos(l),P=p*s,R=(E*s+i)*Math.sin(l),I=E*Math.cos(l),A=E*Math.sin(l),b=1/e*d;let T=1/t*f+.5;T>1&&(T-=1),T=1-T,r.push(x,P,R),o.push(I,p,A),a.push(n[0],n[1],n[2],n[3]),h.push(b,T)}}for(let f=0;f<t;f++)for(let u=0;u<e;u++){const E=(e+1)*f+u;c.push(E,E+e+1,E+1),c.push(E+e+1,E+e+2,E+1)}return{position:r,normal:o,color:a,texCoord:h,index:c}}static icosahedron(t,e){const s=(1+Math.sqrt(5))/2,i=s*t,n=Math.sqrt(1+s*s),r=[1/n,s/n],o=[-t,i,0,t,i,0,-t,-i,0,t,-i,0,0,-t,i,0,t,i,0,-t,-i,0,t,-i,i,0,-t,i,0,t,-i,0,-t,-i,0,t],a=[-r[0],r[1],0,r[0],r[1],0,-r[0],-r[1],0,r[0],-r[1],0,0,-r[0],r[1],0,r[0],r[1],0,-r[0],-r[1],0,r[0],-r[1],r[1],0,-r[0],r[1],0,r[0],-r[1],0,-r[0],-r[1],0,r[0]],h=[e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3]],c=[];for(let u=0,E=a.length;u<E;u+=3){const p=(Math.atan2(a[u+2],-a[u])+Math.PI)/(Math.PI*2),d=1-(a[u+1]+1)/2;c.push(p,d)}return{position:o,normal:a,color:h,texCoord:c,index:[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]}}}const j=g.Vec2,v=g.Vec3,J=g.Mat4,C=g.Qtn;class G{static get DEFAULT_DISTANCE(){return 5}static get DEFAULT_MIN_DISTANCE(){return 1}static get DEFAULT_MAX_DISTANCE(){return 10}static get DEFAULT_MOVE_SCALE(){return 2}constructor(t,e={}){this.target=t,this.distance=e.distance||G.DEFAULT_DISTANCE,this.minDistance=e.min||G.DEFAULT_MIN_DISTANCE,this.maxDistance=e.max||G.DEFAULT_MAX_DISTANCE,this.moveScale=e.move||G.DEFAULT_MOVE_SCALE,this.position=v.create(0,0,this.distance),this.center=v.create(0,0,0),this.upDirection=v.create(0,1,0),this.defaultPosition=v.create(0,0,this.distance),this.defaultCenter=v.create(0,0,0),this.defaultUpDirection=v.create(0,1,0),this.movePosition=v.create(0,0,0),this.rotateX=0,this.rotateY=0,this.scale=0,this.isDown=!1,this.prevPosition=j.create(0,0),this.offsetPosition=j.create(0,0),this.qt=C.create(),this.qtx=C.create(),this.qty=C.create(),this.mouseInteractionStart=this.mouseInteractionStart.bind(this),this.mouseInteractionMove=this.mouseInteractionMove.bind(this),this.mouseInteractionEnd=this.mouseInteractionEnd.bind(this),this.wheelScroll=this.wheelScroll.bind(this),this.target.addEventListener("mousedown",this.mouseInteractionStart,!1),this.target.addEventListener("mousemove",this.mouseInteractionMove,!1),this.target.addEventListener("mouseup",this.mouseInteractionEnd,!1),this.target.addEventListener("wheel",this.wheelScroll,!1),this.target.addEventListener("contextmenu",s=>{s.preventDefault()},!1)}setPosition(t){this.defaultPosition=t}mouseInteractionStart(t){this.isDown=!0;const e=this.target.getBoundingClientRect();this.prevPosition=j.create(t.clientX-e.left,t.clientY-e.top)}mouseInteractionMove(t){if(this.isDown!==!0)return;const e=this.target.getBoundingClientRect(),s=e.width,i=e.height,n=t.clientX-e.left,r=t.clientY-e.top,o=1/Math.min(s,i);switch(this.offsetPosition=j.create(n-this.prevPosition[0],r-this.prevPosition[1]),this.prevPosition=j.create(n,r),t.buttons){case 1:this.rotateX+=this.offsetPosition[0]*o,this.rotateY+=this.offsetPosition[1]*o,this.rotateX=this.rotateX%1,this.rotateY=Math.min(Math.max(this.rotateY%1,-.25),.25);break;case 2:const a=v.create(this.offsetPosition[0],-this.offsetPosition[1],0),h=C.toVecIII(a,this.qt);this.movePosition[0]-=h[0]*o*this.moveScale,this.movePosition[1]-=h[1]*o*this.moveScale,this.movePosition[2]-=h[2]*o*this.moveScale;break}}mouseInteractionEnd(t){this.isDown=!1}wheelScroll(t){const e=t.wheelDelta;e>0?this.scale=-.5:e<0&&(this.scale=.5)}update(){const t=Math.PI*2,e=v.create(1,0,0),s=v.create(0,1,0);return this.scale*=.7,this.distance+=this.scale,this.distance=Math.min(Math.max(this.distance,this.minDistance),this.maxDistance),this.defaultPosition[2]=this.distance,C.identity(this.qt),C.identity(this.qtx),C.identity(this.qty),C.rotate(this.rotateX*t,s,this.qtx),C.toVecIII(e,this.qtx,e),C.rotate(this.rotateY*t,e,this.qty),C.multiply(this.qtx,this.qty,this.qt),C.toVecIII(this.defaultPosition,this.qt,this.position),C.toVecIII(this.defaultUpDirection,this.qt,this.upDirection),this.position[0]+=this.movePosition[0],this.position[1]+=this.movePosition[1],this.position[2]+=this.movePosition[2],this.center[0]=this.defaultCenter[0]+this.movePosition[0],this.center[1]=this.defaultCenter[1]+this.movePosition[1],this.center[2]=this.defaultCenter[2]+this.movePosition[2],J.lookAt(this.position,this.center,this.upDirection)}}var q=`attribute vec3 position;
attribute vec2 texCoord;
varying vec2 vTexCoord;

void main() {
    vTexCoord = vec2(texCoord.s, 1.0 - texCoord.t);

    gl_Position = vec4(position, 1.0);
}`,tt=`precision mediump float;

uniform sampler2D textureUnit;
varying vec2 vTexCoord;

void main() {
    vec4 samplerColor = texture2D(textureUnit, vTexCoord);

    gl_FragColor = samplerColor;
}`,et=`attribute vec3 position;
attribute vec3 normal;
attribute vec2 texCoord;
uniform mat4 mvpMatrix;
uniform mat4 normalMatrix;
varying vec3 vNormal;
varying vec2 vTexCoord;

void main() {
    vNormal = normalize((normalMatrix * vec4(normal, 0.0)).xyz);

    vTexCoord = texCoord;

    gl_Position = mvpMatrix * vec4(position, 1.0);
}`,st=`precision mediump float;

uniform sampler2D textureUnit;
varying vec2 vTexCoord;

void main() {
    vec2 coord = vTexCoord * 2.0 - 0.5;

    vec4 samplerColor = texture2D(textureUnit, coord);

    gl_FragColor = samplerColor;
}`;window.addEventListener("DOMContentLoaded",()=>{const z=new nt;z.init(),z.load().then(()=>{z.setupGeometry(),z.setupLocation(),z.start()})},!1);class nt{constructor(){this.canvas=null,this.gl=null,this.renderProgram=null,this.offscreenProgram=null,this.renderAttLocation=null,this.offscreenAttLocation=null,this.renderAttStride=null,this.offscreenAttStride=null,this.renderUniLocation=null,this.offscreenUniLocation=null,this.planeGeometry=null,this.offscreenPlaneGeometry=null,this.planeVBO=null,this.offscreenPlaneVBO=null,this.planeIBO=null,this.offscreenPlaneIBO=null,this.startTime=null,this.camera=null,this.texture=null,this.framebufferObject=null,this.isRender=!1,this.resize=this.resize.bind(this),this.render=this.render.bind(this)}init(){this.canvas=document.getElementById("webgl-canvas"),this.gl=F.createWebGLContext(this.canvas);const t={distance:4,min:1,max:10,move:2};this.camera=new G(this.canvas,t),this.resize(),window.addEventListener("resize",this.resize,!1),this.gl.enable(this.gl.CULL_FACE),this.gl.enable(this.gl.DEPTH_TEST)}resize(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.framebufferObject!=null&&F.deleteFramebuffer(this.gl,this.framebufferObject.framebuffer,this.framebufferObject.renderbuffer,this.framebufferObject.texture),this.framebufferObject=F.createFramebuffer(this.gl,this.canvas.width,this.canvas.height)}load(){return new Promise((t,e)=>{const s=this.gl;if(s==null){const i=new Error("not initialized");e(i)}else{let i=F.createShaderObject(s,q,s.VERTEX_SHADER),n=F.createShaderObject(s,tt,s.FRAGMENT_SHADER);this.renderProgram=F.createProgramObject(s,i,n),i=F.createShaderObject(s,et,s.VERTEX_SHADER),n=F.createShaderObject(s,st,s.FRAGMENT_SHADER),this.offscreenProgram=F.createProgramObject(s,i,n);const r={basePath:location.hostname==="localhost"||location.hostname==="127.0.0.1"?"":"/webglschool"};F.loadImage(`${r.basePath}/img/space.jpg`).then(o=>{this.texture=F.createTexture(s,o),t()})}})}setupGeometry(){const t=[1,1,1,1],e=2;this.planeGeometry=k.plane(e,e,t),this.planeVBO=[F.createVBO(this.gl,this.planeGeometry.position),F.createVBO(this.gl,this.planeGeometry.texCoord)],this.planeIBO=F.createIBO(this.gl,this.planeGeometry.index),this.offscreenPlaneGeometry=k.plane(e*2,e,t),this.offscreenPlaneVBO=[F.createVBO(this.gl,this.offscreenPlaneGeometry.position),F.createVBO(this.gl,this.offscreenPlaneGeometry.texCoord)],this.offscreenPlaneIBO=F.createIBO(this.gl,this.offscreenPlaneGeometry.index)}setupLocation(){const t=this.gl;this.renderAttLocation=[t.getAttribLocation(this.renderProgram,"position"),t.getAttribLocation(this.renderProgram,"texCoord")],this.renderAttStride=[3,2],this.renderUniLocation={textureUnit:t.getUniformLocation(this.renderProgram,"textureUnit")},this.offscreenAttLocation=[t.getAttribLocation(this.offscreenProgram,"position"),t.getAttribLocation(this.offscreenProgram,"texCoord")],this.offscreenAttStride=[3,2],this.offscreenUniLocation={mvpMatrix:t.getUniformLocation(this.offscreenProgram,"mvpMatrix"),normalMatrix:t.getUniformLocation(this.offscreenProgram,"normalMatrix"),textureUnit:t.getUniformLocation(this.offscreenProgram,"textureUnit")}}setupRendering(){const t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,null),t.viewport(0,0,this.canvas.width,this.canvas.height),t.clearColor(.3,.3,.3,1),t.clearDepth(1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),t.useProgram(this.renderProgram),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.framebufferObject.texture)}setupOffscreenRendering(){const t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,this.framebufferObject.framebuffer),t.viewport(0,0,this.canvas.width,this.canvas.height),t.clearColor(0,0,0,1),t.clearDepth(1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),t.useProgram(this.offscreenProgram),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.texture)}start(){this.startTime=Date.now(),this.isRender=!0,this.render()}stop(){this.isRender=!1}render(){const t=this.gl,e=g.Mat4;this.isRender&&requestAnimationFrame(this.render),(Date.now()-this.startTime)*.001;{this.setupOffscreenRendering();const s=this.camera.update(),i=Math.min(2*(180/Math.PI)*Math.atan(2/(2*this.camera.distance)),2*(180/Math.PI)*Math.atan(4/(window.innerWidth/window.innerHeight)/(2*this.camera.distance))),n=window.innerWidth/window.innerHeight,r=.1,o=10,a=e.perspective(i,n,r,o),h=e.multiply(a,s);let c=e.identity();const f=e.multiply(h,c);F.enableBuffer(t,this.offscreenPlaneVBO,this.offscreenAttLocation,this.offscreenAttStride,this.offscreenPlaneIBO),t.uniformMatrix4fv(this.offscreenUniLocation.mvpMatrix,!1,f),t.uniform1i(this.offscreenUniLocation.textureUnit,0),t.drawElements(t.TRIANGLES,this.offscreenPlaneGeometry.index.length,t.UNSIGNED_SHORT,0)}this.setupRendering(),F.enableBuffer(t,this.planeVBO,this.renderAttLocation,this.renderAttStride,this.planeIBO),t.uniform1i(this.renderUniLocation.textureUnit,0),t.drawElements(t.TRIANGLES,this.planeGeometry.index.length,t.UNSIGNED_SHORT,0)}}
