import{V as c,G as g,L as m,e as P,b as f,f as A,F as E,g as R,W as y,C as L,S as I,P as T,D as C,A as x,h as N,i as b,a as D,O as G,j as p,d as _,Q as B}from"./OrbitControls-3f92ff18.js";import{G as H,E as S,R as F,U as V}from"./lil-gui.esm-ad75824a.js";import"./transform-4d2927c0.js";function z(l){if(!l.ok)throw new Error(l.status+" "+l.statusText);if(!(l.status===204||l.status===205))return l.json()}function v(l,n){return fetch(l,n).then(z)}window.addEventListener("DOMContentLoaded",()=>{const l=new e;l.load().then(()=>{l.init(),l.render()})},!1);class e{static get CAMERA_PARAM(){return{fovy:45,aspect:window.innerWidth/window.innerHeight,near:.1,far:1e4,x:10,y:0,z:2500,lookAt:new c(0,0,0)}}static get RENDERER_PARAM(){return{clearColor:0,width:window.innerWidth,height:window.innerHeight}}static get DIRECTIONAL_LIGHT_PARAM(){return{color:16777215,intensity:1,x:1,y:1,z:1}}static get AMBIENT_LIGHT_PARAM(){return{color:16777215,intensity:.2}}static get MATERIAL_PARAM(){return{color:251686655}}static get AIRPLANE_DISTANCE(){return 1e3}static get TRAIL_MATERIAL_PARAM(){return{color:28415,linewidth:5}}static get TRAIL_LENGTH(){return 50}constructor(){this.renderer,this.scene,this.camera,this.controls,this.directionalLight,this.ambientLight,this.axesHelper,this.lines=new g,this.lineMaterial=new m({linewidth:1,color:16777215}),this.countryBoundaries,this.coneGeometry,this.airplane,this.airplaneMaterial,this.airplaneDirection,this.trail,this.trailMaterial,this.trailGeometry,this.trailVertices,this.composer,this.renderPass,this.unrealBloomPass,this.finalComposer,this.params={bloomStrength:1.5,bloomThreshold:0,bloomRadius:.85},this.bloomLayer=new P,this.clock=new f,this.render=this.render.bind(this),window.addEventListener("resize",()=>{this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix()},!1)}createLineFromCoords(n){let o=new A,i=[];for(let a=0;a<n.length;a++){let t=n[a].y,s=n[a].x,r=e.RENDERER_PARAM.height,h=t*(Math.PI/180),d=-s*(Math.PI/180),M=Math.cos(h)*Math.cos(d)*r,u=Math.sin(h)*r,w=Math.cos(h)*Math.sin(d)*r;i.push(M,u,w)}return o.setAttribute("position",new E(i,3)),new R(o,this.lineMaterial)}addGeoJsonFeaturesToScene(n){for(let o=0;o<n.length;o++){let i=n[o],a=[];for(let t=0;t<i.geometry.coordinates.length;t++)if(i.geometry.type==" Polygon"){let s=[];for(let r=0;r<i.geometry.coordinates[t].length;r++){let h={x:i.geometry.coordinates[t][r][0],y:i.geometry.coordinates[t][r][1]};s.push(h)}s.length>0&&this.lines.add(this.coordinatesreateLineFromCoords(s))}else if(i.geometry.type=="MultiPolygon")for(let s=0;s<i.geometry.coordinates[t].length;s++)for(let r=0;r<i.geometry.coordinates[t][s].length;r++)i.geometry.coordinates[t][s][r][0],i.geometry.coordinates[t][s][r][1];else if(i.geometry.type=="LineString"){let s={x:i.geometry.coordinates[t][0],y:i.geometry.coordinates[t][1]};a.push(s)}i.geometry.type=="LineString"&&a.length>0&&this.lines.add(this.createLineFromCoords(a))}this.scene.add(this.lines)}async load(){return this.countryBoundaries=await v("https://gisco-services.ec.europa.eu/distribution/v2/countries/geojson/CNTR_BN_20M_2020_4326.geojson")}init(){this.renderer=new y({antialias:!0}),this.renderer.setClearColor(new L(e.RENDERER_PARAM.clearColor)),this.renderer.setSize(e.RENDERER_PARAM.width,e.RENDERER_PARAM.height),this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),document.querySelector("#webgl").appendChild(this.renderer.domElement),this.scene=new I,this.camera=new T(e.CAMERA_PARAM.fovy,e.CAMERA_PARAM.aspect,e.CAMERA_PARAM.near,e.CAMERA_PARAM.far),this.camera.position.set(e.CAMERA_PARAM.x,e.CAMERA_PARAM.y,e.CAMERA_PARAM.z),this.camera.lookAt(e.CAMERA_PARAM.lookAt),this.directionalLight=new C(e.DIRECTIONAL_LIGHT_PARAM.color,e.DIRECTIONAL_LIGHT_PARAM.intensity),this.directionalLight.position.set(e.DIRECTIONAL_LIGHT_PARAM.x,e.DIRECTIONAL_LIGHT_PARAM.y,e.DIRECTIONAL_LIGHT_PARAM.z),this.scene.add(this.directionalLight),this.ambientLight=new x(e.AMBIENT_LIGHT_PARAM.color,e.AMBIENT_LIGHT_PARAM.intensity),this.scene.add(this.ambientLight),this.coneGeometry=new N(10,30,32),this.airplaneMaterial=new b(e.MATERIAL_PARAM),this.airplane=new D(this.coneGeometry,this.airplaneMaterial),this.scene.add(this.airplane),this.airplane.scale.setScalar(3),this.airplane.position.set(e.AIRPLANE_DISTANCE,0,0),this.airplaneDirection=new c(0,1,0).normalize(),this.trailVertices=[],this.trailMaterial=new m(e.TRAIL_MATERIAL_PARAM),this.trailGeometry=new A().setFromPoints(this.trailVertices),this.trail=new R(this.trailGeometry,this.trailMaterial),this.scene.add(this.trail);const o=new H;o.addColor(e.TRAIL_MATERIAL_PARAM,"color").onChange(t=>{this.airplaneMaterial.color.set(t),this.trailMaterial.color.set(t)}),o.add(e.TRAIL_MATERIAL_PARAM,"linewidth",1,10).onChange(t=>{this.trailMaterial.linewidth=Number(t)});const i=o.addFolder("Bloom");i.add(this.params,"bloomStrength",0,3).onChange(t=>{this.unrealBloomPass.strength=Number(t)}),i.add(this.params,"bloomThreshold",0,1).onChange(t=>{this.unrealBloomPass.threshold=Number(t)}),this.controls=new G(this.camera,this.renderer.domElement);const a=1e3;this.axesHelper=new p(a),this.axesHelper.visible=!1,this.scene.add(this.axesHelper),o.add(this.axesHelper,"visible").name("Axes Helper"),this.addGeoJsonFeaturesToScene(this.countryBoundaries.features),this.composer=new S(this.renderer),this.renderPass=new F(this.scene,this.camera),this.composer.addPass(this.renderPass),this.unrealBloomPass=new V(new _(window.innerWidth,window.innerHeight),1.5,.4,.85),this.unrealBloomPass.threshold=this.params.bloomThreshold,this.unrealBloomPass.strength=this.params.bloomStrength,this.unrealBloomPass.radius=this.params.bloomRadius,this.composer.addPass(this.unrealBloomPass),this.unrealBloomPass.renderToScreen=!1}render(){requestAnimationFrame(this.render),this.controls.update(),this.lines.rotation.y+=.001;const n=this.clock.getElapsedTime(),o=new c(Math.cos(n)*e.AIRPLANE_DISTANCE,Math.cos(n)*e.AIRPLANE_DISTANCE,Math.sin(n)*e.AIRPLANE_DISTANCE),i=this.airplaneDirection.clone(),a=new c().subVectors(o,this.airplane.position);a.normalize(),this.airplaneDirection.add(a.multiplyScalar(1)),this.airplaneDirection.normalize();const t=this.airplaneDirection.clone();this.airplane.position.add(t.multiplyScalar(15));const s=new c().crossVectors(i,this.airplaneDirection);s.normalize();const r=i.dot(this.airplaneDirection),h=Math.acos(r),d=new B().setFromAxisAngle(s,h);this.airplane.quaternion.premultiply(d),this.trailVertices.push(this.airplane.position.clone()),this.trailVertices.length>e.TRAIL_LENGTH&&this.trailVertices.shift(),this.trailGeometry.setFromPoints(this.trailVertices),this.composer.render()}}
