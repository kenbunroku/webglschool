import{V as u,R as E,d as g,p as P,W as p,C as I,S as x,P as C,D as T,A as b,q as _,f as G,r as H,s as v,i as w,t as D,a as R,u as N,j}from"./three.module-2fb1e1b7.js";window.addEventListener("DOMContentLoaded",()=>{const l=new e;l.load().then(()=>{l.init(),l.render()})},!1);class e{static get CAMERA_PARAM(){return{fovy:45,aspect:window.innerWidth/window.innerHeight,near:.1,far:20,x:-1,y:2,z:7,lookAt:new u(0,0,0)}}static get RENDERER_PARAM(){return{clearColor:0,width:window.innerWidth,height:window.innerHeight}}static get DIRECTIONAL_LIGHT_PARAM(){return{color:16777215,intensity:1,x:1,y:1,z:1}}static get AMBIENT_LIGHT_PARAM(){return{color:16777215,intensity:.2}}static get MATERIAL_PARAM(){return{color:16777215}}constructor(){this.renderer,this.scene,this.camera,this.controls,this.directionalLight,this.ambientLight,this.axesHelper,this.line,this.lineGeometry,this.lineMaterial,this.linePoints=[],this.points,this.pointsGeometry,this.pointsMaterial,this.planeArray=[],this.render=this.render.bind(this),this.apiKey="0296d9cfab50bb2bb831354611c78819",this.movieList,window.addEventListener("resize",()=>{this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix()},!1),this.raycaster=new E,window.addEventListener("pointermove",s=>{const n=s.clientX/window.innerWidth*2-1,o=s.clientY/window.innerHeight*2-1,r=new g(n,-o);this.raycaster.setFromCamera(r,this.camera);const h=this.raycaster.intersectObjects(this.planeArray);if(h.length>0){const t=h[0].object;t.position.y=.3,this.planeArray.forEach(a=>{a!==t&&(a.position.y=0)})}else this.planeArray.forEach(i=>{i.position.y=0})},!1)}async load(){this.movieList={"1960s":[],"1970s":[],"1980s":[],"1990s":[],"2000s":[],"2010s":[],"2020s":[]};for(let s=0;s<5;s++){const n=`https://api.themoviedb.org/3/search/movie?query=spider%20man&include_adult=false&language=en-US&page=${s+1}&region=US&api_key=${this.apiKey}`;(await(await fetch(n)).json()).results.filter(i=>i.original_language==="en"&&i.release_date!==""&&i.poster_path!==null).forEach(i=>{const t=i.release_date.slice(0,4);t>=1960&&t<1970?this.movieList["1960s"].push(i):t>=1970&&t<1980?this.movieList["1970s"].push(i):t>=1980&&t<1990?this.movieList["1980s"].push(i):t>=1990&&t<2e3?this.movieList["1990s"].push(i):t>=2e3&&t<2010?this.movieList["2000s"].push(i):t>=2010&&t<2020?this.movieList["2010s"].push(i):t>=2020&&t<2030&&this.movieList["2020s"].push(i)})}}async loadTexture(s){return new Promise((n,o)=>{new P().load(s,r=>n(r),void 0,r=>o(r))})}init(){this.renderer=new p({antialias:!0}),this.renderer.setClearColor(new I(e.RENDERER_PARAM.clearColor)),this.renderer.setSize(e.RENDERER_PARAM.width,e.RENDERER_PARAM.height),this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),document.querySelector("#webgl").appendChild(this.renderer.domElement),this.scene=new x,this.camera=new C(e.CAMERA_PARAM.fovy,e.CAMERA_PARAM.aspect,e.CAMERA_PARAM.near,e.CAMERA_PARAM.far),this.camera.position.set(e.CAMERA_PARAM.x,e.CAMERA_PARAM.y,e.CAMERA_PARAM.z),this.camera.lookAt(e.CAMERA_PARAM.lookAt),this.directionalLight=new T(e.DIRECTIONAL_LIGHT_PARAM.color,e.DIRECTIONAL_LIGHT_PARAM.intensity),this.directionalLight.position.set(e.DIRECTIONAL_LIGHT_PARAM.x,e.DIRECTIONAL_LIGHT_PARAM.y,e.DIRECTIONAL_LIGHT_PARAM.z),this.scene.add(this.directionalLight),this.ambientLight=new b(e.AMBIENT_LIGHT_PARAM.color,e.AMBIENT_LIGHT_PARAM.intensity),this.scene.add(this.ambientLight),this.pointsMaterial=new _(e.MATERIAL_PARAM),this.pointsGeometry=new G;const n=Object.keys(this.movieList).length,o=2,r=[];for(let a=0;a<n;a++){const d=a*o;r.push(-2,0,d)}const h=3,i=new H(new Float32Array(r),h);this.pointsGeometry.setAttribute("position",i),this.points=new v(this.pointsGeometry,this.pointsMaterial),this.scene.add(this.points),this.lineMaterial=new w(e.MATERIAL_PARAM),this.lineGeometry=new D(.01,.01,2*n,32),this.line=new R(this.lineGeometry,this.lineMaterial),this.scene.add(this.line),this.line.rotation.x=Math.PI/2,this.line.rotation.y=-.3,this.line.position.x=-2,this.line.position.z=n;for(const[a,[f,d]]of Object.entries(Object.entries(this.movieList)))d.forEach((M,y)=>{const m=new N(.75,1),c=new R(m);c.position.set(y*.2-1.5,0,o*a),c.rotation.y=-Math.PI/3,this.loadTexture(`https://image.tmdb.org/t/p/original/${M.poster_path}`).then(A=>{const L=new w({map:A,transparent:!0,opacity:1});c.material=L,this.scene.add(c),this.planeArray.push(c)}).catch(A=>{console.error("Error loading texture:",A)})});const t=5;this.axesHelper=new j(t),this.scene.add(this.axesHelper)}render(){requestAnimationFrame(this.render),this.renderer.render(this.scene,this.camera)}}
