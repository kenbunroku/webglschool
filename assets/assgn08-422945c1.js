import"./modulepreload-polyfill-3cfb730f.js";import{t as K}from"./tweakpane-5d85ab35.js";class w{static loadFile(t){return new Promise((e,n)=>{fetch(t).then(i=>i.text()).then(i=>{e(i)}).catch(i=>{n(i)})})}static loadImage(t){return new Promise(e=>{const n=new Image;n.addEventListener("load",()=>{e(n)},!1),n.addEventListener("error",i=>{reject(new Error(`Failed to load image at path: ${t}`))},!1),n.src=t})}static loadImages(t){return Promise.all(t.map(e=>w.loadImage(e)))}static createWebGLContext(t){const e=t.getContext("webgl");if(e==null)throw new Error("webgl not supported");return e}static createShaderObject(t,e,n){const i=t.createShader(n);if(t.shaderSource(i,e),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS))return i;throw new Error(t.getShaderInfoLog(i))}static createProgramObject(t,e,n){const i=t.createProgram();if(t.attachShader(i,e),t.attachShader(i,n),t.linkProgram(i),t.deleteShader(e),t.deleteShader(n),t.getProgramParameter(i,t.LINK_STATUS))return t.useProgram(i),i;throw new Error(t.getProgramInfoLog(i))}static createVBO(t,e){const n=t.createBuffer();return t.bindBuffer(t.ARRAY_BUFFER,n),t.bufferData(t.ARRAY_BUFFER,new Float32Array(e),t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,null),n}static createIBO(t,e){const n=t.createBuffer();return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n),t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Int16Array(e),t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null),n}static enableBuffer(t,e,n,i,s){for(let r=0;r<e.length;++r)t.bindBuffer(t.ARRAY_BUFFER,e[r]),t.enableVertexAttribArray(n[r]),t.vertexAttribPointer(n[r],i[r],t.FLOAT,!1,0,0);s!=null&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,s)}static createTexture(t,e){const n=t.createTexture();return t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,e),t.generateMipmap(t.TEXTURE_2D),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.MIRRORED_REPEAT),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.MIRRORED_REPEAT),t.bindTexture(t.TEXTURE_2D,null),n}static createTextures(t,e){const n=[];for(let i=0;i<e.length;++i)n.push(this.createTexture(t,e[i]));return n}static createFramebuffer(t,e,n){const i=t.createFramebuffer(),s=t.createRenderbuffer(),r=t.createTexture();return t.bindFramebuffer(t.FRAMEBUFFER,i),t.bindRenderbuffer(t.RENDERBUFFER,s),t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,e,n),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,s),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,e,n,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0),t.bindTexture(t.TEXTURE_2D,null),t.bindRenderbuffer(t.RENDERBUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null),{framebuffer:i,depthRenderbuffer:s,texture:r}}static deleteFramebuffer(t,e,n,i){t.deleteFramebuffer(e),t.deleteRenderbuffer(n),t.deleteTexture(i),e=null,n=null,i=null}}class j{static get Vec2(){return $}static get Vec3(){return Q}static get Mat4(){return Z}static get Qtn(){return J}}let $=class W{static create(t=0,e=0){const n=new Float32Array(2);return n[0]=t,n[1]=e,n}static length(t){return Math.sqrt(t[0]*t[0]+t[1]*t[1])}static normalize(t){const e=W.create(),n=W.length(t);if(n>0){const i=1/n;e[0]=t[0]*i,e[1]=t[1]*i}return e}static dot(t,e){return t[0]*e[0]+t[1]*e[1]}static cross(t,e){return W.create(),t[0]*e[1]-t[1]*e[0]}},Q=class N{static create(t=0,e=0,n=0){const i=new Float32Array(3);return i[0]=t,i[1]=e,i[2]=n,i}static length(t){return Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2])}static subtract(t,e){const n=N.create();return n[0]=t[0]-e[0],n[1]=t[1]-e[1],n[2]=t[2]-e[2],n}static normalize(t){const e=N.create(),n=N.length(t);if(n>0){const i=1/n;e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i}return e}static dot(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}static cross(t,e){return N.create(t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0])}static faceNormal(t,e,n){const i=N.create(e[0]-t[0],e[1]-t[1],e[2]-t[2]),s=N.create(n[0]-t[0],n[1]-t[1],n[2]-t[2]),r=N.create(i[1]*s[2]-i[2]*s[1],i[2]*s[0]-i[0]*s[2],i[0]*s[1]-i[1]*s[0]);return N.normalize(r)}},Z=class _{static create(){return new Float32Array(16)}static identity(t){const e=t??_.create();return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}static multiply(t,e,n){const i=n??_.create(),s=t[0],r=t[1],o=t[2],a=t[3],u=t[4],c=t[5],f=t[6],h=t[7],l=t[8],E=t[9],d=t[10],p=t[11],m=t[12],M=t[13],x=t[14],P=t[15],b=e[0],A=e[1],T=e[2],R=e[3],I=e[4],D=e[5],y=e[6],v=e[7],F=e[8],C=e[9],L=e[10],U=e[11],g=e[12],z=e[13],Y=e[14],H=e[15];return i[0]=b*s+A*u+T*l+R*m,i[1]=b*r+A*c+T*E+R*M,i[2]=b*o+A*f+T*d+R*x,i[3]=b*a+A*h+T*p+R*P,i[4]=I*s+D*u+y*l+v*m,i[5]=I*r+D*c+y*E+v*M,i[6]=I*o+D*f+y*d+v*x,i[7]=I*a+D*h+y*p+v*P,i[8]=F*s+C*u+L*l+U*m,i[9]=F*r+C*c+L*E+U*M,i[10]=F*o+C*f+L*d+U*x,i[11]=F*a+C*h+L*p+U*P,i[12]=g*s+z*u+Y*l+H*m,i[13]=g*r+z*c+Y*E+H*M,i[14]=g*o+z*f+Y*d+H*x,i[15]=g*a+z*h+Y*p+H*P,i}static scale(t,e,n){const i=n??_.create();return i[0]=t[0]*e[0],i[1]=t[1]*e[0],i[2]=t[2]*e[0],i[3]=t[3]*e[0],i[4]=t[4]*e[1],i[5]=t[5]*e[1],i[6]=t[6]*e[1],i[7]=t[7]*e[1],i[8]=t[8]*e[2],i[9]=t[9]*e[2],i[10]=t[10]*e[2],i[11]=t[11]*e[2],i[12]=t[12],i[13]=t[13],i[14]=t[14],i[15]=t[15],i}static translate(t,e,n){const i=n??_.create();return i[0]=t[0],i[1]=t[1],i[2]=t[2],i[3]=t[3],i[4]=t[4],i[5]=t[5],i[6]=t[6],i[7]=t[7],i[8]=t[8],i[9]=t[9],i[10]=t[10],i[11]=t[11],i[12]=t[0]*e[0]+t[4]*e[1]+t[8]*e[2]+t[12],i[13]=t[1]*e[0]+t[5]*e[1]+t[9]*e[2]+t[13],i[14]=t[2]*e[0]+t[6]*e[1]+t[10]*e[2]+t[14],i[15]=t[3]*e[0]+t[7]*e[1]+t[11]*e[2]+t[15],i}static rotate(t,e,n,i){let s=i??_.create();const r=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);if(!r)return null;let o=n[0],a=n[1],u=n[2];if(r!=1){const z=1/r;o*=z,a*=z,u*=z}const c=Math.sin(e),f=Math.cos(e),h=1-f,l=t[0],E=t[1],d=t[2],p=t[3],m=t[4],M=t[5],x=t[6],P=t[7],b=t[8],A=t[9],T=t[10],R=t[11],I=o*o*h+f,D=a*o*h+u*c,y=u*o*h-a*c,v=o*a*h-u*c,F=a*a*h+f,C=u*a*h+o*c,L=o*u*h+a*c,U=a*u*h-o*c,g=u*u*h+f;return e?t!=s&&(s[12]=t[12],s[13]=t[13],s[14]=t[14],s[15]=t[15]):s=t,s[0]=l*I+m*D+b*y,s[1]=E*I+M*D+A*y,s[2]=d*I+x*D+T*y,s[3]=p*I+P*D+R*y,s[4]=l*v+m*F+b*C,s[5]=E*v+M*F+A*C,s[6]=d*v+x*F+T*C,s[7]=p*v+P*F+R*C,s[8]=l*L+m*U+b*g,s[9]=E*L+M*U+A*g,s[10]=d*L+x*U+T*g,s[11]=p*L+P*U+R*g,s}static lookAt(t,e,n,i){const s=i??_.create(),r=t[0],o=t[1],a=t[2],u=e[0],c=e[1],f=e[2],h=n[0],l=n[1],E=n[2];if(r==u&&o==c&&a==f)return _.identity(s);let d,p,m,M,x,P,b,A,T,R;return b=r-u,A=o-c,T=a-f,R=1/Math.sqrt(b*b+A*A+T*T),b*=R,A*=R,T*=R,d=l*T-E*A,p=E*b-h*T,m=h*A-l*b,R=Math.sqrt(d*d+p*p+m*m),R?(R=1/R,d*=R,p*=R,m*=R):(d=0,p=0,m=0),M=A*m-T*p,x=T*d-b*m,P=b*p-A*d,R=Math.sqrt(M*M+x*x+P*P),R?(R=1/R,M*=R,x*=R,P*=R):(M=0,x=0,P=0),s[0]=d,s[1]=M,s[2]=b,s[3]=0,s[4]=p,s[5]=x,s[6]=A,s[7]=0,s[8]=m,s[9]=P,s[10]=T,s[11]=0,s[12]=-(d*r+p*o+m*a),s[13]=-(M*r+x*o+P*a),s[14]=-(b*r+A*o+T*a),s[15]=1,s}static perspective(t,e,n,i,s){const r=s??_.create(),o=n*Math.tan(t*Math.PI/360),u=o*e*2,c=o*2,f=i-n;return r[0]=n*2/u,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=n*2/c,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=-(i+n)/f,r[11]=-1,r[12]=0,r[13]=0,r[14]=-(i*n*2)/f,r[15]=0,r}static ortho(t,e,n,i,s,r,o){const a=o??_.create(),u=e-t,c=n-i,f=r-s;return a[0]=2/u,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=2/c,a[6]=0,a[7]=0,a[8]=0,a[9]=0,a[10]=-2/f,a[11]=0,a[12]=-(t+e)/u,a[13]=-(n+i)/c,a[14]=-(r+s)/f,a[15]=1,a}static transpose(t,e){const n=e??_.create();return n[0]=t[0],n[1]=t[4],n[2]=t[8],n[3]=t[12],n[4]=t[1],n[5]=t[5],n[6]=t[9],n[7]=t[13],n[8]=t[2],n[9]=t[6],n[10]=t[10],n[11]=t[14],n[12]=t[3],n[13]=t[7],n[14]=t[11],n[15]=t[15],n}static inverse(t,e){const n=e??_.create(),i=t[0],s=t[1],r=t[2],o=t[3],a=t[4],u=t[5],c=t[6],f=t[7],h=t[8],l=t[9],E=t[10],d=t[11],p=t[12],m=t[13],M=t[14],x=t[15],P=i*u-s*a,b=i*c-r*a,A=i*f-o*a,T=s*c-r*u,R=s*f-o*u,I=r*f-o*c,D=h*m-l*p,y=h*M-E*p,v=h*x-d*p,F=l*M-E*m,C=l*x-d*m,L=E*x-d*M,U=1/(P*L-b*C+A*F+T*v-R*y+I*D);return n[0]=(u*L-c*C+f*F)*U,n[1]=(-s*L+r*C-o*F)*U,n[2]=(m*I-M*R+x*T)*U,n[3]=(-l*I+E*R-d*T)*U,n[4]=(-a*L+c*v-f*y)*U,n[5]=(i*L-r*v+o*y)*U,n[6]=(-p*I+M*A-x*b)*U,n[7]=(h*I-E*A+d*b)*U,n[8]=(a*C-u*v+f*D)*U,n[9]=(-i*C+s*v-o*D)*U,n[10]=(p*R-m*A+x*P)*U,n[11]=(-h*R+l*A-d*P)*U,n[12]=(-a*F+u*y-c*D)*U,n[13]=(i*F-s*y+r*D)*U,n[14]=(-p*T+m*b-M*P)*U,n[15]=(h*T-l*b+E*P)*U,n}static toVecIV(t,e){const n=t[0],i=t[1],s=t[2],r=t[3],o=t[4],a=t[5],u=t[6],c=t[7],f=t[8],h=t[9],l=t[10],E=t[11],d=t[12],p=t[13],m=t[14],M=t[15],x=e[0],P=e[1],b=e[2],A=e[3],T=new Float32Array(4);return T[0]=x*n+P*o+b*f+A*d,T[1]=x*i+P*a+b*h+A*p,T[2]=x*s+P*u+b*l+A*m,T[3]=x*r+P*c+b*E+A*M,T}static screenPositionFromMvp(t,e,n,i){const s=n*.5,r=i*.5,o=_.toVecIV(t,[e[0],e[1],e[2],1]);if(o[3]<=0)return[NaN,NaN];o[0]/=o[3],o[1]/=o[3],o[2]/=o[3];const a=$.create();return a[0]=s+o[0]*s,a[1]=r-o[1]*r,a}},J=class B{static create(){return new Float32Array(4)}static identity(t){const e=t??B.create();return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}static inverse(t,e){const n=e??B.create();return n[0]=-t[0],n[1]=-t[1],n[2]=-t[2],n[3]=t[3],n}static normalize(t){const e=B.create(),n=t[0],i=t[1],s=t[2],r=Math.sqrt(n*n+i*i+s*s);if(r>0){const o=1/r;e[0]=n*o,e[1]=i*o,e[2]=s*o}return e}static multiply(t,e,n){const i=n??B.create(),s=t[0],r=t[1],o=t[2],a=t[3],u=e[0],c=e[1],f=e[2],h=e[3];return i[0]=s*h+a*u+r*f-o*c,i[1]=r*h+a*c+o*u-s*f,i[2]=o*h+a*f+s*c-r*u,i[3]=a*h-s*u-r*c-o*f,i}static rotate(t,e,n){const i=n??B.create();let s=e[0],r=e[1],o=e[2];const a=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);if(a!==0){const c=1/a;s*=c,r*=c,o*=c}const u=Math.sin(t*.5);return i[0]=s*u,i[1]=r*u,i[2]=o*u,i[3]=Math.cos(t*.5),i}static toVecIII(t,e,n){const i=n??Q.create(),s=B.create(),r=B.create(),o=B.create();return B.inverse(e,o),s[0]=t[0],s[1]=t[1],s[2]=t[2],B.multiply(o,s,r),B.multiply(r,e,o),i[0]=o[0],i[1]=o[1],i[2]=o[2],i}static toMatIV(t,e){const n=e??Z.create(),i=t[0],s=t[1],r=t[2],o=t[3],a=i+i,u=s+s,c=r+r,f=i*a,h=i*u,l=i*c,E=s*u,d=s*c,p=r*c,m=o*a,M=o*u,x=o*c;return n[0]=1-(E+p),n[1]=h-x,n[2]=l+M,n[3]=0,n[4]=h+x,n[5]=1-(f+p),n[6]=d-m,n[7]=0,n[8]=l-M,n[9]=d+m,n[10]=1-(f+E),n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,n}static slerp(t,e,n,i){const s=i??B.create(),r=t[0]*e[0]+t[1]*e[1]+t[2]*e[2]+t[3]*e[3];let o=1-r*r;if(o<=0)s[0]=t[0],s[1]=t[1],s[2]=t[2],s[3]=t[3];else if(o=Math.sqrt(o),Math.abs(o)<1e-4)s[0]=t[0]*.5+e[0]*.5,s[1]=t[1]*.5+e[1]*.5,s[2]=t[2]*.5+e[2]*.5,s[3]=t[3]*.5+e[3]*.5;else{const a=Math.acos(r),u=a*n,c=Math.sin(a-u)/o,f=Math.sin(u)/o;s[0]=t[0]*c+e[0]*f,s[1]=t[1]*c+e[1]*f,s[2]=t[2]*c+e[2]*f,s[3]=t[3]*c+e[3]*f}return s}};class k{static plane(t,e,n){const i=t/2,s=e/2,r=[-i,s,0,i,s,0,-i,-s,0,i,-s,0],o=[0,0,1,0,0,1,0,0,1,0,0,1],a=[n[0],n[1],n[2],n[3],n[0],n[1],n[2],n[3],n[0],n[1],n[2],n[3],n[0],n[1],n[2],n[3]];return{position:r,normal:o,color:a,texCoord:[0,0,1,0,0,1,1,1],index:[0,2,1,1,2,3]}}static circle(t,e,n){const i=[],s=[],r=[],o=[],a=[];i.push(0,0,0),s.push(0,0,1),r.push(n[0],n[1],n[2],n[3]),o.push(.5,.5);let u=0;for(let c=0;c<t;c++){const f=Math.PI*2/t*c,h=Math.cos(f),l=Math.sin(f);i.push(h*e,l*e,0),s.push(0,0,1),r.push(n[0],n[1],n[2],n[3]),o.push((h+1)*.5,1-(l+1)*.5),c===t-1?a.push(0,u+1,1):a.push(0,u+1,u+2),++u}return{position:i,normal:s,color:r,texCoord:o,index:a}}static cube(t,e){const n=t*.5,i=[-n,-n,n,n,-n,n,n,n,n,-n,n,n,-n,-n,-n,-n,n,-n,n,n,-n,n,-n,-n,-n,n,-n,-n,n,n,n,n,n,n,n,-n,-n,-n,-n,n,-n,-n,n,-n,n,-n,-n,n,n,-n,-n,n,n,-n,n,n,n,n,-n,n,-n,-n,-n,-n,-n,n,-n,n,n,-n,n,-n],s=1/Math.sqrt(3),r=[-s,-s,s,s,-s,s,s,s,s,-s,s,s,-s,-s,-s,-s,s,-s,s,s,-s,s,-s,-s,-s,s,-s,-s,s,s,s,s,s,s,s,-s,-s,-s,-s,s,-s,-s,s,-s,s,-s,-s,s,s,-s,-s,s,s,-s,s,s,s,s,-s,s,-s,-s,-s,-s,-s,s,-s,s,s,-s,s,-s],o=[];for(let c=0;c<i.length/3;c++)o.push(e[0],e[1],e[2],e[3]);return{position:i,normal:r,color:o,texCoord:[0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1],index:[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]}}static cone(t,e,n,i){const s=[],r=[],o=[],a=[],u=[],c=n/2;s.push(0,-c,0),r.push(0,-1,0),o.push(i[0],i[1],i[2],i[3]),a.push(.5,.5);let f=0;for(let h=0;h<=t;h++){const l=Math.PI*2/t*h,E=Math.cos(l),d=Math.sin(l);s.push(E*e,-c,d*e,E*e,-c,d*e),r.push(0,-1,0,E,0,d),o.push(i[0],i[1],i[2],i[3],i[0],i[1],i[2],i[3]),a.push((E+1)*.5,1-(d+1)*.5,(E+1)*.5,1-(d+1)*.5),h!==t&&(u.push(0,f+1,f+3),u.push(f+4,f+2,t*2+3)),f+=2}return s.push(0,c,0),r.push(0,1,0),o.push(i[0],i[1],i[2],i[3]),a.push(.5,.5),{position:s,normal:r,color:o,texCoord:a,index:u}}static cylinder(t,e,n,i,s){const r=[],o=[],a=[],u=[],c=[],f=i/2;r.push(0,f,0,0,-f,0),o.push(0,1,0,0,-1,0),a.push(s[0],s[1],s[2],s[3],s[0],s[1],s[2],s[3]),u.push(.5,.5,.5,.5);let h=2;for(let l=0;l<=t;l++){const E=Math.PI*2/t*l,d=Math.cos(E),p=Math.sin(E);r.push(d*e,f,p*e,d*e,f,p*e,d*n,-f,p*n,d*n,-f,p*n),o.push(0,1,0,d,0,p,0,-1,0,d,0,p),a.push(s[0],s[1],s[2],s[3],s[0],s[1],s[2],s[3],s[0],s[1],s[2],s[3],s[0],s[1],s[2],s[3]),u.push((d+1)*.5,1-(p+1)*.5,1-l/t,0,(d+1)*.5,1-(p+1)*.5,1-l/t,1),l!==t&&c.push(0,h+4,h,1,h+2,h+6,h+5,h+7,h+1,h+1,h+7,h+3),h+=4}return{position:r,normal:o,color:a,texCoord:u,index:c}}static sphere(t,e,n,i){const s=[],r=[],o=[],a=[],u=[];for(let c=0;c<=t;c++){const f=Math.PI/t*c,h=Math.cos(f),l=Math.sin(f);for(let E=0;E<=e;E++){const d=Math.PI*2/e*E,p=l*n*Math.cos(d),m=h*n,M=l*n*Math.sin(d),x=l*Math.cos(d),P=l*Math.sin(d);s.push(p,m,M),r.push(x,h,P),o.push(i[0],i[1],i[2],i[3]),a.push(1-1/e*E,1/t*c)}}for(let c=0;c<t;c++)for(let f=0;f<e;f++){const h=(e+1)*c+f;u.push(h,h+1,h+e+2),u.push(h,h+e+2,h+e+1)}return{position:s,normal:r,color:o,texCoord:a,index:u}}static torus(t,e,n,i,s){const r=[],o=[],a=[],u=[],c=[];for(let f=0;f<=t;f++){const h=Math.PI*2/t*f,l=Math.cos(h),E=Math.sin(h);for(let d=0;d<=e;d++){const p=Math.PI*2/e*d,m=(l*n+i)*Math.cos(p),M=E*n,x=(l*n+i)*Math.sin(p),P=l*Math.cos(p),b=l*Math.sin(p),A=1/e*d;let T=1/t*f+.5;T>1&&(T-=1),T=1-T,r.push(m,M,x),o.push(P,E,b),a.push(s[0],s[1],s[2],s[3]),u.push(A,T)}}for(let f=0;f<t;f++)for(let h=0;h<e;h++){const l=(e+1)*f+h;c.push(l,l+e+1,l+1),c.push(l+e+1,l+e+2,l+1)}return{position:r,normal:o,color:a,texCoord:u,index:c}}static icosahedron(t,e){const n=(1+Math.sqrt(5))/2,i=n*t,s=Math.sqrt(1+n*n),r=[1/s,n/s],o=[-t,i,0,t,i,0,-t,-i,0,t,-i,0,0,-t,i,0,t,i,0,-t,-i,0,t,-i,i,0,-t,i,0,t,-i,0,-t,-i,0,t],a=[-r[0],r[1],0,r[0],r[1],0,-r[0],-r[1],0,r[0],-r[1],0,0,-r[0],r[1],0,r[0],r[1],0,-r[0],-r[1],0,r[0],-r[1],r[1],0,-r[0],r[1],0,r[0],-r[1],0,-r[0],-r[1],0,r[0]],u=[e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3],e[0],e[1],e[2],e[3]],c=[];for(let h=0,l=a.length;h<l;h+=3){const E=(Math.atan2(a[h+2],-a[h])+Math.PI)/(Math.PI*2),d=1-(a[h+1]+1)/2;c.push(E,d)}return{position:o,normal:a,color:u,texCoord:c,index:[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]}}}const G=j.Vec2,O=j.Vec3,q=j.Mat4,S=j.Qtn;class V{static get DEFAULT_DISTANCE(){return 5}static get DEFAULT_MIN_DISTANCE(){return 1}static get DEFAULT_MAX_DISTANCE(){return 10}static get DEFAULT_MOVE_SCALE(){return 2}constructor(t,e={}){this.target=t,this.distance=e.distance||V.DEFAULT_DISTANCE,this.minDistance=e.min||V.DEFAULT_MIN_DISTANCE,this.maxDistance=e.max||V.DEFAULT_MAX_DISTANCE,this.moveScale=e.move||V.DEFAULT_MOVE_SCALE,this.position=O.create(0,0,this.distance),this.center=O.create(0,0,0),this.upDirection=O.create(0,1,0),this.defaultPosition=O.create(0,0,this.distance),this.defaultCenter=O.create(0,0,0),this.defaultUpDirection=O.create(0,1,0),this.movePosition=O.create(0,0,0),this.rotateX=0,this.rotateY=0,this.scale=0,this.isDown=!1,this.prevPosition=G.create(0,0),this.offsetPosition=G.create(0,0),this.qt=S.create(),this.qtx=S.create(),this.qty=S.create(),this.mouseInteractionStart=this.mouseInteractionStart.bind(this),this.mouseInteractionMove=this.mouseInteractionMove.bind(this),this.mouseInteractionEnd=this.mouseInteractionEnd.bind(this),this.wheelScroll=this.wheelScroll.bind(this),this.target.addEventListener("mousedown",this.mouseInteractionStart,!1),this.target.addEventListener("mousemove",this.mouseInteractionMove,!1),this.target.addEventListener("mouseup",this.mouseInteractionEnd,!1),this.target.addEventListener("wheel",this.wheelScroll,!1),this.target.addEventListener("contextmenu",n=>{n.preventDefault()},!1)}setPosition(t){this.defaultPosition=t}mouseInteractionStart(t){this.isDown=!0;const e=this.target.getBoundingClientRect();this.prevPosition=G.create(t.clientX-e.left,t.clientY-e.top)}mouseInteractionMove(t){if(this.isDown!==!0)return;const e=this.target.getBoundingClientRect(),n=e.width,i=e.height,s=t.clientX-e.left,r=t.clientY-e.top,o=1/Math.min(n,i);switch(this.offsetPosition=G.create(s-this.prevPosition[0],r-this.prevPosition[1]),this.prevPosition=G.create(s,r),t.buttons){case 1:this.rotateX+=this.offsetPosition[0]*o,this.rotateY+=this.offsetPosition[1]*o,this.rotateX=this.rotateX%1,this.rotateY=Math.min(Math.max(this.rotateY%1,-.25),.25);break;case 2:const a=O.create(this.offsetPosition[0],-this.offsetPosition[1],0),u=S.toVecIII(a,this.qt);this.movePosition[0]-=u[0]*o*this.moveScale,this.movePosition[1]-=u[1]*o*this.moveScale,this.movePosition[2]-=u[2]*o*this.moveScale;break}}mouseInteractionEnd(t){this.isDown=!1}wheelScroll(t){const e=t.wheelDelta;e>0?this.scale=-.5:e<0&&(this.scale=.5)}update(){const t=O.create(1,0,0);return O.create(0,1,0),this.scale*=.7,this.distance+=this.scale,this.distance=Math.min(Math.max(this.distance,this.minDistance),this.maxDistance),this.defaultPosition[2]=this.distance,S.identity(this.qt),S.identity(this.qtx),S.identity(this.qty),S.toVecIII(t,this.qtx,t),S.multiply(this.qtx,this.qty,this.qt),S.toVecIII(this.defaultPosition,this.qt,this.position),S.toVecIII(this.defaultUpDirection,this.qt,this.upDirection),q.lookAt(this.position,this.center,this.upDirection)}}var tt=`attribute vec3 position;
attribute vec2 texCoord;
varying vec2 vTexCoord;

void main() {
    vTexCoord = vec2(texCoord.s, 1.0 - texCoord.t);

    gl_Position = vec4(position, 1.0);
}`,et=`precision mediump float;

uniform sampler2D textureUnit;
uniform float mouseX;
uniform float mouseY;
uniform int type;
uniform float time;
uniform float aspect;
varying vec2 vTexCoord;

float circle(vec2 uv, vec2 disc_center, float disc_radius, float border_size, float aspect) {
  uv.x *= aspect;
  disc_center.x *= aspect;
  uv -= disc_center;
  uv *= vec2(1., -1.);
  float dist = sqrt(dot(uv, uv));
  return smoothstep(disc_radius + border_size, disc_radius - border_size, dist);
}

float hash12(vec2 p) {
  float h = dot(p, vec2(127.1, 311.7));
  return fract(sin(h) * 43758.5453123);
}

float hash12_time(vec2 p, float t) {
  float h = dot(p, vec2(127.1, 311.7 + t));
  return fract(sin(h) * 43758.5453123);
}

void main() {
  vec2 newTexCoord = vTexCoord;
  vec2 mouse = vec2(mouseX, mouseY);
  vec4 samplerColor = vec4(1.0, 1.0, 1.0, 1.0);
  float velo = 0.05;

  
  if(type == 0) {
    velo = 0.2 + 0.05 * sin(time);
    float c = circle(newTexCoord, mouse, 0.0, 0.2, aspect);

    float r = texture2D(textureUnit, newTexCoord += c * (velo * 0.5)).x;
    float g = texture2D(textureUnit, newTexCoord += c * (-velo * 1.725)).y;
    float b = texture2D(textureUnit, newTexCoord += c * (velo * 0.55)).z;

    samplerColor = vec4(r, g, b, 1.0);
  }

  
  if(type == 1) {
    velo = 0.03 + sin(time) * 0.03;
    float c = circle(newTexCoord, mouse, 0.0, 0.1 + velo * 2.0, aspect) * 40.0 * velo;

  
    float angle = c * 3.14 * cos(time); 
    mat2 rotation = mat2(cos(angle), -sin(angle), sin(angle), cos(angle));
    vec2 rotatedCoord = rotation * (newTexCoord - mouse) + mouse;

    vec2 warpedTexCoord = mix(rotatedCoord, mouse, c * 0.99);

  
    vec4 originalColor = texture2D(textureUnit, warpedTexCoord);
    vec4 colorShift = vec4(vec3(1.0 - c, 1.0, 1.0 - c), 1.0); 

    samplerColor = originalColor * colorShift + originalColor * vec4(vec3(c), 1.0);
  }

  
  if(type == 2) {
    velo = 0.01 + 0.01 * sin(time); 

  
    float hash = hash12(newTexCoord * 10.0);
    float c = circle(newTexCoord, mouse, 0.0, 0.2 + velo * 0.01, aspect) * 10.0 * velo;

  
    float hash_time = hash12_time(newTexCoord * 5.0, time);
    float c_time = circle(newTexCoord, mouse, 0.0, 0.2 + velo * 0.005, aspect) * 5.0 * velo;

    vec2 warpedTexCoord = newTexCoord + vec2(hash - 0.5) * c + vec2(hash_time - 0.5) * c_time;

  
    vec4 originalColor = texture2D(textureUnit, warpedTexCoord);
    vec4 colorShift = vec4(vec3(c_time, 0.0, 0.0), 1.0);

    samplerColor = originalColor + originalColor * colorShift;
  }

  gl_FragColor = samplerColor;
}`,nt=`attribute vec3 position;
attribute vec3 normal;
attribute vec2 texCoord;
uniform mat4 mvpMatrix;
uniform mat4 normalMatrix;
varying vec3 vNormal;
varying vec2 vTexCoord;

void main() {
    vNormal = normalize((normalMatrix * vec4(normal, 0.0)).xyz);

    vTexCoord = texCoord;

    gl_Position = mvpMatrix * vec4(position, 1.0);
}`,st=`precision mediump float;

uniform sampler2D textureUnit;
varying vec2 vTexCoord;

void main() {
    vec2 coord = vTexCoord * 2.0 - 0.5;

    vec4 samplerColor = texture2D(textureUnit, coord);

    gl_FragColor = samplerColor;
}`;window.addEventListener("DOMContentLoaded",()=>{const X=new it;X.init(),X.load().then(()=>{X.setupGeometry(),X.setupLocation(),X.start()});const t=new K.Pane,e={effect:"color"};t.addInput(e,"effect",{options:{Color:"color",Zoom:"zoom",Random:"random"}}).on("change",n=>{X.setType(n.value)})},!1);class it{constructor(){this.canvas=null,this.gl=null,this.renderProgram=null,this.offscreenProgram=null,this.renderAttLocation=null,this.offscreenAttLocation=null,this.renderAttStride=null,this.offscreenAttStride=null,this.renderUniLocation=null,this.offscreenUniLocation=null,this.planeGeometry=null,this.offscreenPlaneGeometry=null,this.planeVBO=null,this.offscreenPlaneVBO=null,this.planeIBO=null,this.offscreenPlaneIBO=null,this.startTime=null,this.camera=null,this.texture=null,this.framebufferObject=null,this.isRender=!1,this.resize=this.resize.bind(this),this.render=this.render.bind(this),this.mouseX=0,this.mouseY=0,this.mouseDx=0,this.mouseDy=0,this.type=0,window.addEventListener("mousemove",t=>{this.mouseX=t.clientX/window.innerWidth,this.mouseY=1-t.clientY/window.innerHeight,this.mouseDx=t.movementX/window.innerWidth,this.mouseDy=-t.movementY/window.innerHeight})}init(){this.canvas=document.getElementById("webgl-canvas"),this.gl=w.createWebGLContext(this.canvas);const t={distance:4,min:1,max:10,move:2};this.camera=new V(this.canvas,t),this.resize(),window.addEventListener("resize",this.resize,!1),this.gl.enable(this.gl.CULL_FACE),this.gl.enable(this.gl.DEPTH_TEST)}resize(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.framebufferObject!=null&&w.deleteFramebuffer(this.gl,this.framebufferObject.framebuffer,this.framebufferObject.renderbuffer,this.framebufferObject.texture),this.framebufferObject=w.createFramebuffer(this.gl,this.canvas.width,this.canvas.height)}load(){return new Promise((t,e)=>{const n=this.gl;if(n==null){const i=new Error("not initialized");e(i)}else{let i=w.createShaderObject(n,tt,n.VERTEX_SHADER),s=w.createShaderObject(n,et,n.FRAGMENT_SHADER);this.renderProgram=w.createProgramObject(n,i,s),i=w.createShaderObject(n,nt,n.VERTEX_SHADER),s=w.createShaderObject(n,st,n.FRAGMENT_SHADER),this.offscreenProgram=w.createProgramObject(n,i,s);const r={basePath:location.hostname==="localhost"||location.hostname==="127.0.0.1"?"":"/webglschool"};w.loadImage(`${r.basePath}/img/space.jpg`).then(o=>{this.texture=w.createTexture(n,o),t()})}})}setType(t){t=="color"?this.type=0:t=="zoom"?this.type=1:t=="random"&&(this.type=2)}setupGeometry(){const t=[1,1,1,1],e=2;this.planeGeometry=k.plane(e,e,t),this.planeVBO=[w.createVBO(this.gl,this.planeGeometry.position),w.createVBO(this.gl,this.planeGeometry.texCoord)],this.planeIBO=w.createIBO(this.gl,this.planeGeometry.index),this.offscreenPlaneGeometry=k.plane(e*2,e,t),this.offscreenPlaneVBO=[w.createVBO(this.gl,this.offscreenPlaneGeometry.position),w.createVBO(this.gl,this.offscreenPlaneGeometry.texCoord)],this.offscreenPlaneIBO=w.createIBO(this.gl,this.offscreenPlaneGeometry.index)}setupLocation(){const t=this.gl;this.renderAttLocation=[t.getAttribLocation(this.renderProgram,"position"),t.getAttribLocation(this.renderProgram,"texCoord")],this.renderAttStride=[3,2],this.renderUniLocation={textureUnit:t.getUniformLocation(this.renderProgram,"textureUnit"),mouseX:t.getUniformLocation(this.renderProgram,"mouseX"),mouseY:t.getUniformLocation(this.renderProgram,"mouseY"),type:t.getUniformLocation(this.renderProgram,"type"),time:t.getUniformLocation(this.renderProgram,"time"),aspect:t.getUniformLocation(this.renderProgram,"aspect")},this.offscreenAttLocation=[t.getAttribLocation(this.offscreenProgram,"position"),t.getAttribLocation(this.offscreenProgram,"texCoord")],this.offscreenAttStride=[3,2],this.offscreenUniLocation={mvpMatrix:t.getUniformLocation(this.offscreenProgram,"mvpMatrix"),normalMatrix:t.getUniformLocation(this.offscreenProgram,"normalMatrix"),textureUnit:t.getUniformLocation(this.offscreenProgram,"textureUnit")}}setupRendering(){const t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,null),t.viewport(0,0,this.canvas.width,this.canvas.height),t.clearColor(.3,.3,.3,1),t.clearDepth(1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),t.useProgram(this.renderProgram),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.framebufferObject.texture)}setupOffscreenRendering(){const t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,this.framebufferObject.framebuffer),t.viewport(0,0,this.canvas.width,this.canvas.height),t.clearColor(0,0,0,1),t.clearDepth(1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),t.useProgram(this.offscreenProgram),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.texture)}start(){this.startTime=Date.now(),this.isRender=!0,this.render()}stop(){this.isRender=!1}render(){const t=this.gl,e=j.Mat4;this.isRender&&requestAnimationFrame(this.render);const n=(Date.now()-this.startTime)*.001;{this.setupOffscreenRendering();const i=this.camera.update(),s=Math.min(2*(180/Math.PI)*Math.atan(2/(2*this.camera.distance)),2*(180/Math.PI)*Math.atan(4/(window.innerWidth/window.innerHeight)/(2*this.camera.distance))),r=window.innerWidth/window.innerHeight,o=.1,a=10,u=e.perspective(s,r,o,a),c=e.multiply(u,i);let f=e.identity();const h=e.multiply(c,f);w.enableBuffer(t,this.offscreenPlaneVBO,this.offscreenAttLocation,this.offscreenAttStride,this.offscreenPlaneIBO),t.uniformMatrix4fv(this.offscreenUniLocation.mvpMatrix,!1,h),t.uniform1i(this.offscreenUniLocation.textureUnit,0),t.drawElements(t.TRIANGLES,this.offscreenPlaneGeometry.index.length,t.UNSIGNED_SHORT,0)}this.setupRendering(),w.enableBuffer(t,this.planeVBO,this.renderAttLocation,this.renderAttStride,this.planeIBO),t.uniform1i(this.renderUniLocation.textureUnit,0),t.uniform1f(this.renderUniLocation.mouseX,this.mouseX),t.uniform1f(this.renderUniLocation.mouseY,this.mouseY),t.uniform1i(this.renderUniLocation.type,this.type),t.uniform1f(this.renderUniLocation.time,n),t.uniform1f(this.renderUniLocation.aspect,this.canvas.width/this.canvas.height),t.drawElements(t.TRIANGLES,this.planeGeometry.index.length,t.UNSIGNED_SHORT,0)}}
